---
# ZFS module installs (non-secure boot), role account is created, snapshot
# script deployed and scheduled job is started. VM required as ZFS loads kernel
# modules.
dependency:
  name: 'galaxy'
driver:
  name: 'vagrant'
  provider:
    name: 'virtualbox'
    config_options:
      ssh.keep_alive: true
      ssh.remote_user: 'root'
    options:
      append_platform_to_hostname: false
provisioner:
  name: 'ansible'
  config_options:
    defaults:
      interpreter_python: 'auto_silent'  # suppress warnings
      callback_whitelist: 'profile_tasks, timer, yaml'  # output profiling info
  inventory:
    group_vars:
      all:
        zfs_create_user: true
        zfs_snapshot_enable: true
        zfs_snapshot_remote_user: 'zfs_snapshot'
        zfs_snapshot_remote_pool: 'test_pool'
        zfs_snapshot_remote_server: 'example.com'
        zfs_snapshot_remote_ssh_options:
          - '-i /root/backup/backup.key'
        zfs_pools_restart_share_enable: true
platforms:
  - name: 'zfs-debian-12-vm-default'
    box: 'debian/bookworm64'
    memory: 4096
    cpus: 2
    interfaces:
      - network_name: private_network  # network_name required
        auto_config: true
        type: 'dhcp'
verifier:
  name: 'ansible'
lint: |
  set -e
  yamllint .
  ansible-lint .
scenario:
  test_sequence:
    # - 'dependency'
    # - 'cleanup'
    - 'destroy'
    - 'syntax'
    - 'create'
    - 'prepare'
    - 'converge'
    # - 'idempotence'  # services/timers toggled in prepare.
    # - 'side_effect'
    - 'verify'
    # - 'cleanup'
    - 'destroy'
